/*
  El Grinch est√° abriendo las cartas que iban a Santa Claus y las est√° dejando
  hechas un l√≠o. üò±
  Las cartas son una cadena de texto que incluyen regalos y par√©ntesis ().
  Para saber si una carta es v√°lida ‚úÖ, debes comprobar que los par√©ntesis
  cierran correctamente y que, adem√°s, no vayan vac√≠os.
  
  !¬°Pero ojo! Porque el Grinch ha dejado llaves { y corchetes [ dentro de 
  !los par√©ntesis que hacen que no sean v√°lidas. Por suerte s√≥lo los ha 
  !dejado en medio de los par√©ntesis...

  Ejemplos:

  *"bici coche (bal√≥n) bici coche peluche" // -> ‚úÖ
  *"(mu√±eca) consola bici" // ‚úÖ

  *"bici coche (bal√≥n bici coche" // -> ‚ùå
  *"peluche (bici [coche) bici coche bal√≥n" // -> ‚ùå
  *"(peluche {) bici" // -> ‚ùå

  *"() bici" // ‚ùå

  ?Crea una funci√≥n que pas√°ndole el texto de la carta, devuelva true si es 
  ?v√°lida y false si no lo es. ¬°Y acaba con la travesura del Grinch!
*/
const isValid = (letter) => {
	const Symbols = ['(', ')', '[', ']', '{', '}'];
	const SymbolLetter = { '(': ')' };
	const Stack = [];
	const Gift = [];
	const ArrGifts = letter.trim().split('');
	ArrGifts.forEach((letter) => {
		if (letter === SymbolLetter[Stack[Stack.length - 1]]) {
			Stack.pop(letter);
		} else if (Symbols.includes(letter)) {
			Stack.push(letter);
		} else if (Stack.includes('(')) Gift.push(letter);
	});
	return !Stack.length && Gift.length > 0;
};

//export default isValid;
//"(a() bici (a)" deber√≠a ser inv√°lido () bici
console.log('tree');
console.log(isValid('bici coche (bal√≥n) bici coche peluche'));
console.log(isValid('(mu√±eca) consola bici'));
console.log('----------------------false-----------------------');
console.log(isValid('bici coche (bal√≥n bici coche'));
console.log(isValid('peluche (bici [coche) bici coche bal√≥n'));
console.log(isValid('(peluche {) bici'));
console.log(isValid('() bici'));
console.log('----------------------test------------------------');
console.log(isValid('(muneca) consola visi'));
console.log(isValid('(a() bici (a)'));
console.log(isValid('() bici'));
